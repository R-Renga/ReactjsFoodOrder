//NPM//

ANS : Npm is a node javascript platform.it puts module in place so can node can find them and manages
      their dependency conflicts intelligently.using npm we install some extra packages to boost our app.
       ex : bundling,minify,optimization,remove console.

       1) npm init - it gives package.json 
       2)npm init -y -> that y removes some options

note : yarn - its faster than npm because its do parallel installation and more secure than npm.its takes
               more disk space.

      

//PACKAGE.JSON//

Ans : Its contains the options that we give when we initialize Npm.


//Bundlers//

bundlers are used to convert javascript files into single one that is production
ready loadable in browser.

//WEBPACK/PARCEL//

webpack/parcel is using primary javascript bundling in projects

why parcel?

parcel requires only zero configuration to get it up and running but other bundlers need 
lot of configuration to set up.

parcel also has drawbacks all the files bundled together.(css,html,image,js).
webpack has a clean structure in a bundled folder.

parcel capable of watching javascript rather than html file as well.

why we need this bundlers ?
1.installing dependency and preprocessors
2.dev server and port
3.code splitting



//Parcel installation
npm install -D parcel

-D - means we need parcel in developer enivironment not for production

Dependencies vs dev dependencies

Depedencies is a object that contain library,which your project require this for production
enivironment and functionality

Dev Depedencies - > dev dependencies are in package.json file and its needs only for project
                    development process. not for production.


package.json and package-lock.json :

package.json contains information about our project and the dependencies we installed 
in our projects.identify the entry point our project

package-lock.json contains relative dependencies with their latest version and save it in
package.json.it will commit in git so only the enivironment will install the same dependency What
we used in local environment.it have TRANSITIVE Depedencies


caret and tilde

caret will update your all the minor version without incrementing major version

tilde

caret will update your all the patch version without incrementing minor version.



Why should I not modify `package-lock.json`?
it will automatically upadted by npm 

Node modules and ? Is it a good idea to push that on git?

its a datebase of our npm.it conatains of our dependencies and their relative dependencies informations.


Node modules and ? Is it a good idea to push that on git?
NO



npm install react
npm install react-dom



ignite our app :

npx parcel index.html - development ready minfied files
exeuting parcel entry point

npx parcel index.html --https

npm parcel build index.js - > production ready minified files
exeuting parcel entry point 


Npx - its used to execute the any package that you want from npm registry


gitignore - its a text file and its tells git which files or folder want to be ignore
            in your project.Anything that will be autogenerated that will be push to gitignore


Module

Module can import and export the files


parcel Advantages

1.HMR = HOT MODULE REPLACEMENT - It will reload your browser everytime u update the files.
2.File Watcher Algorthim - written on c++.
3..parcel.cache = this file takes some space to do minification of our code and some other things.
4.dist - folder - all the minified code will be push into dist folder.
5.bundling
6.minified
7.cleaning our code (remove consoles and all)
8.Dev and Production build
9.Super fast build algorithm
10.media is heaviest thing on browser when we load (parcel will optimize that).
11.compression
12.cache cleaning 
13.Compatible with older version of browser - using browserlist package
14.https on dev
15.port number
16.zero configuration
17.tree shaking -> remove unwanted code. if our import library have 10 functions but we used only 2
                    so remaining 8 will be removed by parcel.that is tree shaking

18.







http and https : 

hypertext transfer protocal = > difference is https  is encrypt and verify the normal http 
                                request and response.while http transfer plain data.


Type attributes in html specifies the type of the script.

it identfies the content between script tags


The main advantage of using a Library over a Framework is that Libraries are lightweight, 
and there is a freedom to choose different tools. 
The Framework consists of an entire ecosystem to build an application, 
and you don't have an easy way to use any other tools outside the Framework."
